{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Code Me Maybe Introduction Multiple code samples of popular programming languages, documented in increasing complexity to help you decide on whether or not you are interested in diving deeper into the language. Sounds boring, right? Lets try that again. Chronically affected by shiny things syndrome? Well, look no further! This repo is your one-stop shop for indecisive developers, seasoned procrastinators, and code enthusiasts with commitment issues. Compiled are code samples from popular programming languages to help you decide whether to take the plunge or keep swiping left. You\u2019ll find basic programs \u2014 nothing too fancy, just enough to whet your appetite and help you avoid those dreaded, \u201cI-just-invested-30-hours-learning-the-wrong-language\u201d nightmares. Each sample starts simple, with the complexity creeping up like that one bug in production you thought you squashed. Who is this for ? People who can't pick a tech stack because they want to try everything . Developers who enjoy comparing \"Hello World\" in 50 different ways. Coders who have too many open tabs (seriously, just close some). Languages Featured Python \u2013 The Swiss Army knife of programming languages. Simple enough for beginners yet powerful enough for pros. It gets stuff done, whether you're scripting, building an app or dabbling in ML & AI. No need for semicolons, curly braces, or headaches. It\u2019s here to let you write clean, readable code without breaking a sweat. It's so intuitive, you'll start to think you're actually good at coding. JavaScript \u2013 The \"Hold-my-beer\" programming language. You need a website? Sure. Backend server? Why not. Game? Probably. Something to cry about? Don't mind if I do. Saying it is a wild-card would be an understatement. It Runs everywhere, does everything, and somehow manages to break in the most unpredictable ways. Oh, and goodluck on choosing between React, Vue, Angular or whichever new \"game-changing\" framework was invented during the weekend by some cracked dev in Antarctica. It's like Peter Pan, but with more bugs. TypeScript \u2013 Javascript's younger and cooler(obviously) sibling. Now your \"Hello world\" runs with added aesthetics of type annotations and 20-minute error fixes just to get an even more verbose and vague error message. Ignoring the fact that you are now writing more code than you ever thought possible, you get to play with the big kids in the world of static typing. Oh, and you\u2019ll have more than enough time to rethink all your life choices (and also watch the Game of Thrones title sequence) before that \u201chello world\u201d finally compiles. C \u2013 The language that makes you appreciate high-level programming... because every time you have to manage memory manually, you\u2019ll wonder why you didn\u2019t just become a carpenter instead. Forget abstractions, here we\u2019re playing with raw memory and pointers like we own the place (spoiler: we don\u2019t). The thrill of going low-level and getting dangerously close to the hardware will seem like pure magic when it works, but at the cost of losing a few years off your life due to constant segfault-induced stress. Rust \u2013 For those who look at C and say, \u201cWhat if we could make that a little more... complicated?\u201d Rust lets you manage memory manually but throws so many rules at you that managing it feels more like a philosophy class than writing code. It\u2019s like walking a tightrope over a pit of sharks, but if you fall, the sharks don\u2019t just eat you\u2014they go back in time and eat your entire development career, because that\u2019s what happens when you misuse memory. Warning: may cause smugness when talking to C developers. Go \u2013 Perfect for when you want to pretend you\u2019re too cool for traditional languages. The language that\u2019s so easy to deploy, even your grandma could use it. Unless you try to convince her to use interfaces, and then she'll just nod politely and ask if you\u2019ve tried a \u201creal\u201d programming language. Built specifically for people who live on the \"just enough\" philosophy. NOTE: Let me know if you'd like to tweak or add any more languages!","title":"Home"},{"location":"#welcome-to-code-me-maybe","text":"","title":"Welcome to Code Me Maybe"},{"location":"#introduction","text":"Multiple code samples of popular programming languages, documented in increasing complexity to help you decide on whether or not you are interested in diving deeper into the language. Sounds boring, right? Lets try that again. Chronically affected by shiny things syndrome? Well, look no further! This repo is your one-stop shop for indecisive developers, seasoned procrastinators, and code enthusiasts with commitment issues. Compiled are code samples from popular programming languages to help you decide whether to take the plunge or keep swiping left. You\u2019ll find basic programs \u2014 nothing too fancy, just enough to whet your appetite and help you avoid those dreaded, \u201cI-just-invested-30-hours-learning-the-wrong-language\u201d nightmares. Each sample starts simple, with the complexity creeping up like that one bug in production you thought you squashed.","title":"Introduction"},{"location":"#who-is-this-for","text":"People who can't pick a tech stack because they want to try everything . Developers who enjoy comparing \"Hello World\" in 50 different ways. Coders who have too many open tabs (seriously, just close some).","title":"Who is this for?"},{"location":"#languages-featured","text":"Python \u2013 The Swiss Army knife of programming languages. Simple enough for beginners yet powerful enough for pros. It gets stuff done, whether you're scripting, building an app or dabbling in ML & AI. No need for semicolons, curly braces, or headaches. It\u2019s here to let you write clean, readable code without breaking a sweat. It's so intuitive, you'll start to think you're actually good at coding. JavaScript \u2013 The \"Hold-my-beer\" programming language. You need a website? Sure. Backend server? Why not. Game? Probably. Something to cry about? Don't mind if I do. Saying it is a wild-card would be an understatement. It Runs everywhere, does everything, and somehow manages to break in the most unpredictable ways. Oh, and goodluck on choosing between React, Vue, Angular or whichever new \"game-changing\" framework was invented during the weekend by some cracked dev in Antarctica. It's like Peter Pan, but with more bugs. TypeScript \u2013 Javascript's younger and cooler(obviously) sibling. Now your \"Hello world\" runs with added aesthetics of type annotations and 20-minute error fixes just to get an even more verbose and vague error message. Ignoring the fact that you are now writing more code than you ever thought possible, you get to play with the big kids in the world of static typing. Oh, and you\u2019ll have more than enough time to rethink all your life choices (and also watch the Game of Thrones title sequence) before that \u201chello world\u201d finally compiles. C \u2013 The language that makes you appreciate high-level programming... because every time you have to manage memory manually, you\u2019ll wonder why you didn\u2019t just become a carpenter instead. Forget abstractions, here we\u2019re playing with raw memory and pointers like we own the place (spoiler: we don\u2019t). The thrill of going low-level and getting dangerously close to the hardware will seem like pure magic when it works, but at the cost of losing a few years off your life due to constant segfault-induced stress. Rust \u2013 For those who look at C and say, \u201cWhat if we could make that a little more... complicated?\u201d Rust lets you manage memory manually but throws so many rules at you that managing it feels more like a philosophy class than writing code. It\u2019s like walking a tightrope over a pit of sharks, but if you fall, the sharks don\u2019t just eat you\u2014they go back in time and eat your entire development career, because that\u2019s what happens when you misuse memory. Warning: may cause smugness when talking to C developers. Go \u2013 Perfect for when you want to pretend you\u2019re too cool for traditional languages. The language that\u2019s so easy to deploy, even your grandma could use it. Unless you try to convince her to use interfaces, and then she'll just nod politely and ask if you\u2019ve tried a \u201creal\u201d programming language. Built specifically for people who live on the \"just enough\" philosophy. NOTE: Let me know if you'd like to tweak or add any more languages!","title":"Languages Featured"}]}